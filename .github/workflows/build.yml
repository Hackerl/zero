name: zero
on: [ push ]
jobs:
  linux-amd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 18
          sudo apt install -y libc++abi-18-dev libc++-18-dev
      - name: Build
        run: |
          mkdir -p build
          cmake -B build \
            -DCMAKE_TOOLCHAIN_FILE="${VCPKG_INSTALLATION_ROOT}/scripts/buildsystems/vcpkg.cmake" \
            -DBUILD_TESTING=OFF
          cmake --build build -j$(nproc)
        env:
          CC: clang-18
          CXX: clang++-18
          CXXFLAGS: -stdlib=libc++

  linux-static-amd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install musl toolchains
        run: curl -fsSL https://github.com/Hackerl/musl-cross-make/releases/download/gcc-14.1.0/x86_64-linux-musl-native-gcc14.tar.gz | tar -xz -C /opt
      - name: Build
        run: |
          mkdir -p build
          cmake -B build \
            -DCMAKE_TOOLCHAIN_FILE="${VCPKG_INSTALLATION_ROOT}/scripts/buildsystems/vcpkg.cmake" \
            -DCMAKE_EXE_LINKER_FLAGS="-static-pie"
          cmake --build build -j$(nproc)
        env:
          CC: /opt/x86_64-linux-musl-native/bin/x86_64-linux-musl-gcc
          CXX: /opt/x86_64-linux-musl-native/bin/x86_64-linux-musl-g++
      - name: Test
        run: ctest --output-on-failure --test-dir build

  windows-amd64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: |
          mkdir -p build
          cmake -B build -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake"
          cmake --build build -j $env:NUMBER_OF_PROCESSORS
      - name: Test
        run: ctest --output-on-failure --test-dir build

  macos-amd64:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - name: Install LLVM
        run: |
          brew install llvm
          echo "LLVM_HOME=$(brew --prefix llvm)" >> $GITHUB_ENV
      - name: Build
        run: |
          mkdir -p build
          cmake -B build \
            -DCMAKE_TOOLCHAIN_FILE="${VCPKG_INSTALLATION_ROOT}/scripts/buildsystems/vcpkg.cmake" \
            -DBUILD_TESTING=OFF
          cmake --build build -j$(sysctl -n hw.physicalcpu)
        env:
          CC: ${{ env.LLVM_HOME }}/bin/clang
          CXX: ${{ env.LLVM_HOME }}/bin/clang++
          LDFLAGS: -L${{ env.LLVM_HOME }}/lib -L${{ env.LLVM_HOME }}/lib/c++ -Wl,-rpath,${{ env.LLVM_HOME }}/lib/c++
